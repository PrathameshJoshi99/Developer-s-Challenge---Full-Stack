Task 1: Login Page
In your server.ts file:

import express from 'express';
import cors from 'cors';
import bodyParser from 'body-parser';
import jwt from 'jsonwebtoken';

const app = express();
app.use(cors());
app.use(bodyParser.json());

const users = [
  { email: 'user1@example.com', password: 'password1' },
  { email: 'user2@example.com', password: 'password2' },
  { email: 'user3@example.com', password: 'password3' }
];

const secretKey = 'your-secret-key'; // Replace with a secure key

app.post('/api/login', (req, res) => {
  const { email, password } = req.body;

  const user = users.find(u => u.email === email && u.password === password);

  if (!user) {
    return res.status(401).json({ message: 'Authentication failed' });
  }

  const token = jwt.sign({ email }, secretKey, { expiresIn: '1h' });
  res.status(200).json({ token });
});

Task 2: Search Page
In your server.ts file:

import axios from 'axios';

app.get('/api/search', (req, res) => {
  const { title } = req.query;
  const token = req.headers.authorization?.split(' ')[1];

  if (!token) {
    return res.status(401).json({ message: 'Authorization token missing' });
  }

  try {
    jwt.verify(token, secretKey);
  } catch (err) {
    return res.status(401).json({ message: 'Invalid token' });
  }

  axios.get(`https://api.tvmaze.com/search/shows?q=${title}`)
    .then(response => {
      const shows = response.data.map((show: any) => ({
        name: show.show.name,
        summary: show.show.summary,
        // Add other required fields
      }));
      res.status(200).json(shows);
    })
    .catch(error => {
      res.status(500).json({ message: 'Error fetching data from TV Maze API' });
    });
});



Install the following dependency:
npm install jsonwebtoken axios


